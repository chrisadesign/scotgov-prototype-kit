/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 2);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./assets/scripts/all.js":
/*!*******************************!*\
  !*** ./assets/scripts/all.js ***!
  \*******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_scottish_government_pattern_library_src_all__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/@scottish-government/pattern-library/src/all */ \"./node_modules/@scottish-government/pattern-library/src/all.js\");\n/* harmony import */ var _cookie_preferences__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cookie-preferences */ \"./assets/scripts/cookie-preferences.js\");\n\n\n\nwindow.DS = window.DS || {};\n\n// add scroll depth tracking to back to top\nif (window.DS.tracking) {\n    window.DS.tracking.add.backtotop = function (scope = document) {\n        const backToTops = [].slice.call(scope.querySelectorAll('.ds_back-to-top__button'));\n        backToTops.forEach(backToTop => {\n            backToTop.setAttribute('data-navigation', 'backtotop');\n\n            if (!backToTop.classList.contains('js-initialised')) {\n                backToTop.addEventListener('click', () => {\n                    window.dataLayer = window.dataLayer || [];\n                    window.dataLayer.push({\n                        event: 'backToTop',\n                        scrollDepthAbs: window.scrollY,\n                        scrollDepthRel: +(window.scrollY / window.innerHeight).toFixed(3)\n                    });\n                });\n\n                backToTop.classList.add('js-initialised');\n            }\n        });\n\n        window.DS.tracking.add.backToTop(scope);\n    };\n}\n\nObject(_node_modules_scottish_government_pattern_library_src_all__WEBPACK_IMPORTED_MODULE_0__[\"initAll\"])();\n\nconst cookiePreferencesEl = document.querySelector('[data-module=\"cookie-preferences\"]');\nif (cookiePreferencesEl) {\n    const cookiePreferences = new _cookie_preferences__WEBPACK_IMPORTED_MODULE_1__[\"default\"](cookiePreferencesEl);\n    cookiePreferences.init();\n}\n\n\n//# sourceURL=webpack:///./assets/scripts/all.js?");

  /***/ }),

  /***/ "./assets/scripts/cookie-preferences.js":
  /*!**********************************************!*\
    !*** ./assets/scripts/cookie-preferences.js ***!
    \**********************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_scottish_government_pattern_library_src_base_tools_storage_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/@scottish-government/pattern-library/src/base/_tools/storage/storage */ \"./node_modules/@scottish-government/pattern-library/src/base/_tools/storage/storage.js\");\n// 'use strict';\n\n\n\nclass cookiePreferences {\n    constructor(el) {\n        this.preferencesElement = el;\n        this.formElement = el.querySelector('#cookie-preferences');\n    }\n\n    init() {\n        const className = 'fully-hidden';\n        const cookieNotice = document.getElementById('cookie-notice');\n        const cookieConfirm = document.getElementById('cookie-confirm');\n\n        this.preferencesElement.classList.remove(className);\n\n        if (this.formElement) {\n            this.cookiePermissions = {};\n            this.setFormOptions();\n\n            this.formElement.addEventListener('submit', event => {\n                event.preventDefault();\n\n                const inputs = document.querySelectorAll('input[name^=\"cookie\"][value=\"true\"]');\n\n                for (let j = 0, jl = inputs.length; j < jl; j++) {\n                    const thisInput = inputs[j];\n                    this.cookiePermissions[thisInput.name.replace('cookie-', '')] = thisInput.checked;\n                }\n\n                _node_modules_scottish_government_pattern_library_src_base_tools_storage_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set({\n                    type: 'cookie',\n                    category: 'necessary',\n                    value: JSON.stringify(this.cookiePermissions),\n                    name: 'cookiePermissions',\n                    expiry: 365\n                });\n\n                _node_modules_scottish_government_pattern_library_src_base_tools_storage_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set({\n                    type: 'cookie',\n                    category: 'necessary',\n                    name: 'cookie-notification-acknowledged',\n                    value: 'yes',\n                    expires: 365\n                });\n\n                // hide cookie notice\n                cookieNotice.classList.add('fully-hidden');\n                cookieConfirm.classList.remove('fully-hidden');\n\n                window.scrollTo(window.scrollX, 0);\n            });\n\n            const cookieBannerButtons = [].slice.call(document.querySelectorAll('.js-accept-all-cookies, .js-accept-essential-cookies'));\n            cookieBannerButtons.forEach(button => {\n                button.addEventListener('click', () => {\n                    this.setFormOptions();\n                });\n            });\n        }\n    }\n\n    setFormOptions() {\n        window.setTimeout(() => {\n            const inputGroups = this.formElement.querySelectorAll('.ds_field-group');\n            const cookiePermissionsString = _node_modules_scottish_government_pattern_library_src_base_tools_storage_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].get({\n                type: 'cookie',\n                name: 'cookiePermissions'\n            });\n\n            if (cookiePermissionsString && _node_modules_scottish_government_pattern_library_src_base_tools_storage_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isJsonString(cookiePermissionsString)) {\n                this.cookiePermissions = JSON.parse(cookiePermissionsString);\n            }\n\n            for (let i = 0, il = inputGroups.length; i < il; i++) {\n                const inputGroup = inputGroups[i];\n\n                const groupName = inputGroup.querySelector('input[type=\"radio\"]').name;\n\n                if (this.cookiePermissions[groupName.replace('cookie-', '')]) {\n                    inputGroup.querySelector('input[id$=\"-yes\"]').setAttribute('checked', true);\n                } else {\n                    inputGroup.querySelector('input[id$=\"-no\"]').setAttribute('checked', true);\n                }\n            }\n        }, 0);\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (cookiePreferences);\n\n\n//# sourceURL=webpack:///./assets/scripts/cookie-preferences.js?");

  /***/ }),

  /***/ "./assets/scripts/ds-site.js":
  /*!***********************************!*\
    !*** ./assets/scripts/ds-site.js ***!
    \***********************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./storage */ \"./assets/scripts/storage.js\");\n\n\nconst dsSite = {\n    init: function () {\n        this.setInitialCookiePermissions();\n    },\n\n    setInitialCookiePermissions: function () {\n        const permissionsString = _storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getCookie('cookiePermissions') || '';\n\n        if (!_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isJsonString(permissionsString)) {\n            const permissions = {};\n            permissions.statistics = true;\n            permissions.preferences = true;\n\n            _storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].setCookie(_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"].categories.necessary,\n                'cookiePermissions',\n                JSON.stringify(permissions)\n            );\n        }\n    },\n};\n\ndsSite.init();\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (global);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))\n\n//# sourceURL=webpack:///./assets/scripts/ds-site.js?");

  /***/ }),

  /***/ "./assets/scripts/storage.js":
  /*!***********************************!*\
    !*** ./assets/scripts/storage.js ***!
    \***********************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nconst storage = {\n    categories: {\n        necessary: 'necessary',\n        preferences: 'preferences',\n        statistics: 'statistics',\n        campaigns: 'campaigns',\n        marketing: 'marketing'\n    },\n\n    types: {\n        cookie: 'cookie',\n        localStorage: 'local',\n        sessionStorage: 'session'\n    },\n\n    /**\n     * Sets a storage item (local, session, or cookie)\n     *\n     * Usage example:\n     * storage.set({type: 'cookie', category: 'necessary', name: 'somethinganalyticsy', value: 1, expires: 7}})\n     *\n     * @param {object} obj\n     *   - {string} type (accepted values: 'cookie', 'local', 'session')\n     *   - {string} category - used to determine whether user has given permission to store this\n     *   - {string} name\n     *   - {string} value\n     *   - {number} expires - days to remember a cookie for (only relevant to cookies)\n     */\n    set: function (obj) {\n        if (storage.hasPermission(obj.category)) {\n            if (obj.type === storage.types.cookie) {\n                return storage.cookie.set(obj.name, obj.value, obj.expires);\n            } else if (obj.type === storage.types.localStorage) {\n                localStorage.setItem(obj.name, obj.value);\n            } else if (obj.type === storage.types.sessionStorage) {\n                sessionStorage.setItem(obj.name, obj.value);\n            }\n        }\n    },\n\n    /**\n     * Gets a storage item (local, session, or cookie)\n     *\n     * Usage example:\n     * storage.get({type: 'session', name: 'remembertabs'})\n     *\n     * @param {object} obj\n     *   - {string} storage (accepted values: 'cookie', 'local', 'session')\n     *   - {string} name\n     *\n     * @returns {string} value of the storage item\n     */\n    get: function (obj) {\n        let value;\n\n        if (obj.type === storage.types.cookie) {\n            value = storage.cookie.get(obj.name);\n        } else if (obj.type === storage.types.localStorage) {\n            value = localStorage.getItem(obj.name);\n        } else if (obj.type === storage.types.sessionStorage) {\n            value = sessionStorage.getItem(obj.name);\n        }\n\n        return value;\n    },\n\n    // more direct method than set({type: cookies, category: 'aaa', name: 'bbb', value: 'ccc', expires: ddd})\n    setCookie: function (category, name, value, expires) {\n        if (storage.hasPermission(category)) {\n            storage.cookie.set(name, value, expires);\n        }\n    },\n\n    // more direct method than set({type: localStorage, category: 'aaa', name: 'bbb', value: 'ccc'})\n    setLocalStorage: function (category, name, value) {\n        if (storage.hasPermission(category)) {\n            localStorage.setItem(name, value);\n        }\n    },\n\n    // more direct method than set({type: sessionStorage, category: 'aaa', name: 'bbb', value: 'ccc'})\n    setSessionStorage: function (category, name, value) {\n        if (storage.hasPermission(category)) {\n            sessionStorage.setItem(name, value);\n        }\n    },\n\n    // more direct method than get({type: cookies, name: foo}\n    getCookie: function (name) {\n        return storage.cookie.get(name);\n    },\n\n    // more direct method than get({type: localStorage, name: foo}\n    getLocalStorage: function (name) {\n        return localStorage.getItem(name);\n    },\n\n    // more direct method than get({type: sessionStorage, name: foo}\n    getSessionStorage: function (name) {\n        return sessionStorage.getItem(name);\n    },\n\n    cookie: {\n        set: function (name, value, expires) {\n            const cookieData = {\n                name: name,\n                value: value\n            };\n\n            if (expires) {\n                const date = new Date();\n                date.setTime(date.getTime() + (expires * 24 * 60 * 60 * 1000));\n\n                cookieData.expires = date.toUTCString();\n            }\n\n            // build the string, as IE wants expires parameter omitted if no expires set\n            let cookieString = name + '=' + value + '; ';\n            if (cookieData.expires) {\n                cookieString += 'expires=' + cookieData.expires + '; ';\n            }\n            cookieString += 'path=/';\n\n            document.cookie = cookieString;\n\n            // this variable is used in tests to verify that things are being set correctly\n            return cookieData;\n        },\n\n        get: function (name) {\n            const nameEQ = name + '=',\n                cookiesArray = document.cookie.split(';');\n\n            // find a matching cookie\n            for (let i = 0, il = cookiesArray.length; i < il; i++) {\n                let cookie = cookiesArray[i];\n\n                while (cookie.charAt(0) === ' ') {\n                    cookie = cookie.substring(1, cookie.length);\n                }\n\n                if (cookie.indexOf(nameEQ) === 0) {\n                    return cookie.substring(nameEQ.length, cookie.length);\n                }\n            }\n\n            // return null if no matching cookie found\n            return null;\n        }\n    },\n\n    hasPermission(category) {\n        const cookiePermissionsString = storage.get({\n            type: storage.types.cookie,\n            name: 'cookiePermissions'\n        }) || '';\n\n        let cookiePermissions = {};\n\n        if (storage.isJsonString(cookiePermissionsString)) {\n            cookiePermissions = JSON.parse(cookiePermissionsString);\n        }\n\n        return category === storage.categories.necessary || cookiePermissions[category] === true;\n    },\n\n    isJsonString: function (str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n};\n\nwindow.storage = storage;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (storage);\n\n\n//# sourceURL=webpack:///./assets/scripts/storage.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/all.js":
  /*!**********************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/all.js ***!
    \**********************************************************************/
  /*! exports provided: initAll, Accordion, BackToTop, CharacterCount, CollapsibleSearchBox, DSDatePicker, HidePage, MobileMenu, MobileTables, NotificationBanner, SideNavigation, Tabs */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initAll\", function() { return initAll; });\n/* harmony import */ var _components_accordion_accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./components/accordion/accordion */ \"./node_modules/@scottish-government/pattern-library/src/components/accordion/accordion.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Accordion\", function() { return _components_accordion_accordion__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n/* harmony import */ var _components_back_to_top_back_to_top__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./components/back-to-top/back-to-top */ \"./node_modules/@scottish-government/pattern-library/src/components/back-to-top/back-to-top.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"BackToTop\", function() { return _components_back_to_top_back_to_top__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; });\n\n/* harmony import */ var _forms_character_count_character_count__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./forms/character-count/character-count */ \"./node_modules/@scottish-government/pattern-library/src/forms/character-count/character-count.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CharacterCount\", function() { return _forms_character_count_character_count__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; });\n\n/* harmony import */ var _components_site_search_site_search__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./components/site-search/site-search */ \"./node_modules/@scottish-government/pattern-library/src/components/site-search/site-search.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"CollapsibleSearchBox\", function() { return _components_site_search_site_search__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; });\n\n/* harmony import */ var _components_cookie_notification_cookie_notification__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./components/cookie-notification/cookie-notification */ \"./node_modules/@scottish-government/pattern-library/src/components/cookie-notification/cookie-notification.js\");\n/* harmony import */ var _components_date_picker_date_picker__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./components/date-picker/date-picker */ \"./node_modules/@scottish-government/pattern-library/src/components/date-picker/date-picker.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"DSDatePicker\", function() { return _components_date_picker_date_picker__WEBPACK_IMPORTED_MODULE_5__[\"default\"]; });\n\n/* harmony import */ var _components_hide_this_page_hide_this_page__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/hide-this-page/hide-this-page */ \"./node_modules/@scottish-government/pattern-library/src/components/hide-this-page/hide-this-page.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"HidePage\", function() { return _components_hide_this_page_hide_this_page__WEBPACK_IMPORTED_MODULE_6__[\"default\"]; });\n\n/* harmony import */ var _components_site_navigation_site_navigation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./components/site-navigation/site-navigation */ \"./node_modules/@scottish-government/pattern-library/src/components/site-navigation/site-navigation.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MobileMenu\", function() { return _components_site_navigation_site_navigation__WEBPACK_IMPORTED_MODULE_7__[\"default\"]; });\n\n/* harmony import */ var _components_table_table__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./components/table/table */ \"./node_modules/@scottish-government/pattern-library/src/components/table/table.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"MobileTables\", function() { return _components_table_table__WEBPACK_IMPORTED_MODULE_8__[\"default\"]; });\n\n/* harmony import */ var _components_notification_banner_notification_banner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./components/notification-banner/notification-banner */ \"./node_modules/@scottish-government/pattern-library/src/components/notification-banner/notification-banner.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"NotificationBanner\", function() { return _components_notification_banner_notification_banner__WEBPACK_IMPORTED_MODULE_9__[\"default\"]; });\n\n/* harmony import */ var _components_side_navigation_side_navigation__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./components/side-navigation/side-navigation */ \"./node_modules/@scottish-government/pattern-library/src/components/side-navigation/side-navigation.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"SideNavigation\", function() { return _components_side_navigation_side_navigation__WEBPACK_IMPORTED_MODULE_10__[\"default\"]; });\n\n/* harmony import */ var _components_tabs_tabs__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./components/tabs/tabs */ \"./node_modules/@scottish-government/pattern-library/src/components/tabs/tabs.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"Tabs\", function() { return _components_tabs_tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"]; });\n\n/* harmony import */ var _base_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./base/tracking/tracking */ \"./node_modules/@scottish-government/pattern-library/src/base/tracking/tracking.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst components = {\n    Accordion: _components_accordion_accordion__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    BackToTop: _components_back_to_top_back_to_top__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    CharacterCount: _forms_character_count_character_count__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    CollapsibleSearchBox: _components_site_search_site_search__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    CookieNotification: _components_cookie_notification_cookie_notification__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    DSDatePicker: _components_date_picker_date_picker__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    HidePage: _components_hide_this_page_hide_this_page__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    MobileMenu: _components_site_navigation_site_navigation__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    MobileTables: _components_table_table__WEBPACK_IMPORTED_MODULE_8__[\"default\"],\n    NotificationBanner: _components_notification_banner_notification_banner__WEBPACK_IMPORTED_MODULE_9__[\"default\"],\n    SideNavigation: _components_side_navigation_side_navigation__WEBPACK_IMPORTED_MODULE_10__[\"default\"],\n    Tabs: _components_tabs_tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"]\n};\n\n// Similar to gov.uk approach, allow DS to be applied in a more targeted way than the whole document if needed\n// defaults to document\nfunction initAll(scope = document) {\n    const accordions = [].slice.call(scope.querySelectorAll('[data-module=\"ds-accordion\"]'));\n    accordions.forEach(accordion => new _components_accordion_accordion__WEBPACK_IMPORTED_MODULE_0__[\"default\"](accordion).init());\n\n    const backToTopEl = scope.querySelector('[data-module=\"ds-back-to-top\"]');\n    if (backToTopEl) {\n        const backToTop = new _components_back_to_top_back_to_top__WEBPACK_IMPORTED_MODULE_1__[\"default\"](backToTopEl);\n        backToTop.init();\n    }\n\n    const characterCountModules = [].slice.call(scope.querySelectorAll('[data-module=\"ds-character-count\"]'));\n    // const characterCountElements = [].slice.call(scope.querySelectorAll('input[maxlength], textarea[maxlength]'));\n    // characterCountElements.forEach(element => characterCountModules.push(element.parentNode));\n    characterCountModules.forEach(characterCount => new _forms_character_count_character_count__WEBPACK_IMPORTED_MODULE_2__[\"default\"](characterCount).init());\n\n    const cookieNotificationEl = document.querySelector('[data-module=\"ds-cookie-notification\"]');\n    if (cookieNotificationEl) {\n        const cookieNotification = new _components_cookie_notification_cookie_notification__WEBPACK_IMPORTED_MODULE_4__[\"default\"](cookieNotificationEl);\n        cookieNotification.init();\n    }\n\n    const datePickers = [].slice.call(document.querySelectorAll('[data-module=\"ds-datepicker\"]'));\n    datePickers.forEach(datePicker => new _components_date_picker_date_picker__WEBPACK_IMPORTED_MODULE_5__[\"default\"](datePicker).init());\n     // this one is handled differently because it applies an event to the whole body and we only want that event once\n    const hidePageButtons = [].slice.call(scope.querySelectorAll('.ds_hide-page'));\n    if (hidePageButtons.length) {\n        const hidePage = new _components_hide_this_page_hide_this_page__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n        hidePage.init();\n    }\n\n    const mobileMenus = [].slice.call(scope.querySelectorAll('[data-module=\"ds-mobile-navigation-menu\"]'));\n    mobileMenus.forEach(mobileMenu =>  new _components_site_navigation_site_navigation__WEBPACK_IMPORTED_MODULE_7__[\"default\"](mobileMenu).init());\n\n    const notificationBanners = [].slice.call(scope.querySelectorAll('[data-module=\"ds-notification\"]'));\n    notificationBanners.forEach(notificationBanner => new _components_notification_banner_notification_banner__WEBPACK_IMPORTED_MODULE_9__[\"default\"](notificationBanner).init());\n\n    const searchBoxes = [].slice.call(scope.querySelectorAll('[data-module=\"ds-site-search\"]'));\n    searchBoxes.forEach(searchBox => new _components_site_search_site_search__WEBPACK_IMPORTED_MODULE_3__[\"default\"](searchBox).init());\n\n    const sideNavigations = [].slice.call(scope.querySelectorAll('[data-module=\"ds-side-navigation\"]'));\n    sideNavigations.forEach(sideNavigation => new _components_side_navigation_side_navigation__WEBPACK_IMPORTED_MODULE_10__[\"default\"](sideNavigation).init());\n\n    const tables = [].slice.call(scope.querySelectorAll('table[data-smallscreen]'));\n    if (tables.length) {\n        const mobileTables = new _components_table_table__WEBPACK_IMPORTED_MODULE_8__[\"default\"]();\n        mobileTables.init();\n    }\n\n    const tabSets = [].slice.call(scope.querySelectorAll('[data-module=\"ds-tabs\"]'));\n    tabSets.forEach(tabSet => new _components_tabs_tabs__WEBPACK_IMPORTED_MODULE_11__[\"default\"](tabSet).init());\n\n    _base_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__[\"default\"].init();\n}\n\nwindow.DS = window.DS || {};\nwindow.DS.components = components;\nwindow.DS.tracking = _base_tracking_tracking__WEBPACK_IMPORTED_MODULE_12__[\"default\"];\n\n\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/all.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/base/_tools/storage/storage.js":
  /*!**********************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/base/_tools/storage/storage.js ***!
    \**********************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nconst storage = {\n    categories: {\n        necessary: 'necessary',\n        preferences: 'preferences',\n        statistics: 'statistics',\n        campaigns: 'campaigns',\n        marketing: 'marketing'\n    },\n\n    types: {\n        cookie: 'cookie',\n        localStorage: 'local',\n        sessionStorage: 'session'\n    },\n\n    /**\n     * Sets a storage item (local, session, or cookie)\n     *\n     * Usage example:\n     * storage.set({type: 'cookie', category: 'necessary', name: 'somethinganalyticsy', value: 1, expires: 7}})\n     *\n     * @param {object} obj\n     *   - {string} type (accepted values: 'cookie', 'local', 'session')\n     *   - {string} category - used to determine whether user has given permission to store this\n     *   - {string} name\n     *   - {string} value\n     *   - {number} expires - days to remember a cookie for (only relevant to cookies)\n     */\n    set: function (obj) {\n        if (storage.hasPermission(obj.category)) {\n            if (obj.type === storage.types.cookie) {\n                return storage.cookie.set(obj.name, obj.value, obj.expires);\n            } else if (obj.type === storage.types.localStorage) {\n                localStorage.setItem(obj.name, obj.value);\n            } else if (obj.type === storage.types.sessionStorage) {\n                sessionStorage.setItem(obj.name, obj.value);\n            }\n        }\n    },\n\n    /**\n     * Gets a storage item (local, session, or cookie)\n     *\n     * Usage example:\n     * storage.get({type: 'session', name: 'remembertabs'})\n     *\n     * @param {object} obj\n     *   - {string} storage (accepted values: 'cookie', 'local', 'session')\n     *   - {string} name\n     *\n     * @returns {string} value of the storage item\n     */\n    get: function (obj) {\n        let value;\n\n        if (obj.type === storage.types.cookie) {\n            value = storage.cookie.get(obj.name);\n        } else if (obj.type === storage.types.localStorage) {\n            value = localStorage.getItem(obj.name);\n        } else if (obj.type === storage.types.sessionStorage) {\n            value = sessionStorage.getItem(obj.name);\n        }\n\n        return value;\n    },\n\n    // more direct method than set({type: cookies, category: 'aaa', name: 'bbb', value: 'ccc', expires: ddd})\n    setCookie: function (category, name, value, expires) {\n        if (storage.hasPermission(category)) {\n            storage.cookie.set(name, value, expires);\n        }\n    },\n\n    // more direct method than set({type: localStorage, category: 'aaa', name: 'bbb', value: 'ccc'})\n    setLocalStorage: function (category, name, value) {\n        if (storage.hasPermission(category)) {\n            localStorage.setItem(name, value);\n        }\n    },\n\n    // more direct method than set({type: sessionStorage, category: 'aaa', name: 'bbb', value: 'ccc'})\n    setSessionStorage: function (category, name, value) {\n        if (storage.hasPermission(category)) {\n            sessionStorage.setItem(name, value);\n        }\n    },\n\n    // more direct method than get({type: cookies, name: foo}\n    getCookie: function (name) {\n        return storage.cookie.get(name);\n    },\n\n    // more direct method than get({type: localStorage, name: foo}\n    getLocalStorage: function (name) {\n        return localStorage.getItem(name);\n    },\n\n    // more direct method than get({type: sessionStorage, name: foo}\n    getSessionStorage: function (name) {\n        return sessionStorage.getItem(name);\n    },\n\n    cookie: {\n        set: function (name, value, expires) {\n            const cookieData = {\n                name: name,\n                value: value\n            };\n\n            if (expires) {\n                const date = new Date();\n                date.setTime(date.getTime() + (expires * 24 * 60 * 60 * 1000));\n\n                cookieData.expires = date.toUTCString();\n            }\n\n            // build the string, as IE wants expires parameter omitted if no expires set\n            let cookieString = name + '=' + value + '; ';\n            if (cookieData.expires) {\n                cookieString += 'expires=' + cookieData.expires + '; ';\n            }\n            cookieString += 'path=/';\n\n            document.cookie = cookieString;\n\n            // this variable is used in tests to verify that things are being set correctly\n            return cookieData;\n        },\n\n        get: function (name) {\n            const nameEQ = name + '=',\n                cookiesArray = document.cookie.split(';');\n\n            // find a matching cookie\n            for (let i = 0, il = cookiesArray.length; i < il; i++) {\n                let cookie = cookiesArray[i];\n\n                while (cookie.charAt(0) === ' ') {\n                    cookie = cookie.substring(1, cookie.length);\n                }\n\n                if (cookie.indexOf(nameEQ) === 0) {\n                    return cookie.substring(nameEQ.length, cookie.length);\n                }\n            }\n\n            // return null if no matching cookie found\n            return null;\n        }\n    },\n\n    hasPermission(category) {\n        const cookiePermissionsString = storage.get({\n            type: storage.types.cookie,\n            name: 'cookiePermissions'\n        }) || '';\n\n        let cookiePermissions = {};\n\n        if (storage.isJsonString(cookiePermissionsString)) {\n            cookiePermissions = JSON.parse(cookiePermissionsString);\n        }\n\n        return category === storage.categories.necessary || cookiePermissions[category] === true;\n    },\n\n    isJsonString: function (str) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n};\n\nwindow.storage = storage;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (storage);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/base/_tools/storage/storage.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/base/tracking/tracking.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/base/tracking/tracking.js ***!
    \*****************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nfunction slugify(string) {\n\n    string = String(string);\n\n    return string\n        // Make lower-case\n        .toLowerCase()\n        // Remove misc punctuation\n        .replace(/['\"â€™â€˜â€â€œ`]/g, '')\n        // Replace non-word characters with dashes\n        .replace(/[\\W|_]+/g, '-')\n        // Remove starting and trailing dashes\n        .replace(/^-+|-+$/g, '');\n}\n\nconst tracking = {\n    init: function (scope) {\n        if (!scope) {\n            scope = document;\n        }\n\n        for (var key in tracking.add) {\n            tracking.add[key](scope);\n        }\n    },\n\n    gatherElements: function (className, scope) {\n        let elements = [].slice.call(scope.querySelectorAll(`.${className}`));\n\n        if (scope.classList && scope.classList.contains(className)) {\n            elements.push(scope);\n        }\n\n        return elements;\n    },\n\n    add: {\n        accordions: function (scope = document) {\n            const accordions = tracking.gatherElements('ds_accordion', scope);\n\n            accordions.forEach(accordion => {\n                if (!accordion.classList.contains('js-initialised')) {\n                    return;\n                }\n\n                const openAll = accordion.querySelector('.js-open-all');\n                const items = [].slice.call(accordion.querySelectorAll('.ds_accordion-item'));\n\n                function checkOpenAll() {\n                    const openItemsCount = accordion.querySelectorAll('.ds_accordion-item--open').length;\n                    return (items.length === openItemsCount);\n                }\n\n                function setOpenAll(openAll) {\n                    if (openAll) {\n                        const open = checkOpenAll(openAll);\n\n                        if (open) {\n                            openAll.setAttribute('data-accordion', 'accordion-close-all');\n                        } else {\n                            openAll.setAttribute('data-accordion', 'accordion-open-all');\n                        }\n                    }\n                }\n\n                function setAccordionItem(item, index) {\n                    const itemButton = item.querySelector('.ds_accordion-item__header-button');\n                    const itemControl = item.querySelector('.ds_accordion-item__control');\n                    itemButton.setAttribute('data-accordion', `accordion-${itemControl.checked ? 'close' : 'open'}-${index + 1}`);\n                }\n\n                setOpenAll(openAll);\n\n                items.forEach((item, index) => {\n                    setAccordionItem(item, index);\n                });\n\n                // events\n                if (openAll) {\n                    openAll.addEventListener('click', () => {\n                        items.forEach((item, index) => {\n                            setAccordionItem(item, index);\n                        });\n                    });\n                }\n\n                items.forEach((item, index) => {\n                    const itemButton = item.querySelector('.ds_accordion-item__header-button');\n                    const itemControl = item.querySelector('.ds_accordion-item__control');\n                    itemButton.addEventListener('click', () => {\n                        itemButton.setAttribute('data-accordion', `accordion-${itemControl.checked ? 'close' : 'open'}-${index + 1}`);\n                        setOpenAll(openAll);\n                    });\n                });\n            });\n        },\n\n        asides: function (scope = document) {\n            const asides = tracking.gatherElements('ds_article-aside', scope);\n            asides.forEach(aside => {\n                const links = [].slice.call(aside.querySelectorAll('a:not(.ds_button)'));\n\n                links.forEach((link, index) => {\n                    if (!link.getAttribute('data-navigation')) {\n                        link.setAttribute('data-navigation', `link-related-${index + 1}`);\n                    }\n                });\n            });\n        },\n\n        backToTop: function (scope = document) {\n            const backToTops = tracking.gatherElements('ds_back-to-top__button', scope);\n            backToTops.forEach(backToTop => {\n                backToTop.setAttribute('data-navigation', 'backtotop');\n            });\n        },\n\n        breadcrumbs: function (scope = document) {\n            const breadcrumbLists = tracking.gatherElements('ds_breadcrumbs', scope);\n            breadcrumbLists.forEach(breadcrumbList => {\n                const links = [].slice.call(breadcrumbList.querySelectorAll('.ds_breadcrumbs__link'));\n\n                links.forEach((link, index) => {\n                    if (!link.getAttribute('data-navigation')) {\n                        link.setAttribute('data-navigation', `breadcrumb-${index + 1}`);\n                    }\n                });\n            });\n        },\n\n        buttons: function (scope = document) {\n            const buttons = [].slice.call(scope.querySelectorAll('.ds_button, input[type=\"button\"], input[type=\"submit\"], button'));\n            buttons.forEach(button => {\n                if (!button.getAttribute('data-button')) {\n                    button.setAttribute('data-button', `button-${slugify(button.innerText)}`);\n                }\n            });\n        },\n\n        categoryLists: function (scope = document) {\n            const categoryLists = tracking.gatherElements('ds_category-list', scope);\n            categoryLists.forEach(categoryList => {\n                const links = [].slice.call(categoryList.querySelectorAll('.ds_category-item__link'));\n\n                links.forEach((link, index) => {\n                    if (!link.getAttribute('data-navigation')) {\n                        link.setAttribute('data-navigation', `category-item-${index + 1}`);\n                    }\n                });\n            });\n        },\n\n        checkboxes: function (scope = document) {\n            const checkboxes = tracking.gatherElements('ds_checkbox__input', scope);\n            checkboxes.forEach(checkbox => {\n\n                // data attributes\n                let attributeValue = checkbox.getAttribute('data-form');\n\n                if (!checkbox.getAttribute('data-form') && checkbox.id) {\n                    attributeValue = `checkbox-${checkbox.id}`;\n                }\n\n                if (checkbox.checked) {\n                    attributeValue = attributeValue + '-checked';\n                }\n\n                checkbox.setAttribute('data-form', attributeValue);\n\n                // events\n                const label = scope.querySelector(`[for=${checkbox.id}]`);\n                if (label && !checkbox.classList.contains('js-has-tracking-event')) {\n                    label.addEventListener('click', () => {\n                        checkbox.dataset.form = `checkbox-${checkbox.id}-${checkbox.checked ? 'unchecked' : 'checked'}`;\n                    });\n                    checkbox.classList.add('js-has-tracking-event');\n                }\n            });\n        },\n\n        contactDetails: function (scope = document) {\n            const contactDetailsBlocks = tracking.gatherElements('ds_contact-details', scope);\n            contactDetailsBlocks.forEach(contactDetails => {\n                const socialLinks = [].slice.call(contactDetails.querySelectorAll('.ds_contact-details__social-link'));\n                socialLinks.forEach(link => {\n                    if (!link.getAttribute('data-navigation')) {\n                        link.setAttribute('data-navigation', `contact-details-${slugify(link.innerText)}`);\n                    }\n                });\n\n                const emailLinks = [].slice.call(contactDetails.querySelectorAll('a[href^=\"mailto\"]'));\n                emailLinks.forEach(link => {\n                    if (!link.getAttribute('data-navigation')) {\n                        link.setAttribute('data-navigation', 'contact-details-email');\n                    }\n                });\n            });\n        },\n\n        contentNavs: function (scope = document) {\n            const contentsNavs = tracking.gatherElements('ds_contents-nav', scope);\n            contentsNavs.forEach(contentsNav => {\n                const links = [].slice.call(contentsNav.querySelectorAll('.ds_contents-nav__link'));\n\n                links.forEach((link, index) => {\n                    if (!link.getAttribute('data-navigation')) {\n                        link.setAttribute('data-navigation', `contentsnav-${index + 1}`);\n                    }\n                });\n            });\n        },\n\n        errorMessages: function (scope = document) {\n            const errorMessages = tracking.gatherElements('ds_question__error-message', scope);\n            errorMessages.forEach((errorMessage, index) => {\n                const question = errorMessage.closest('.ds_question');\n\n                if (!question) {return;}\n\n                const target = question.querySelector('.js-validation-group, .ds_input, .ds_select, .ds_checkbox__input, .ds_radio__input');\n                let targetName = index + 1;\n\n                if (target) {\n                    if (target.classList.contains('js-validation-group')) {\n                        const unique = function (value, index, self) {\n                            return self.indexOf(value) === index;\n                        };\n\n                        const inputs = [].slice.call(target.querySelectorAll('.ds_input, .ds_select, .ds_checkbox__input, .ds_radio__input'));\n                        targetName = inputs.map(input => {\n                            if (input.type === 'radio') {\n                                return input.name;\n                            } else {\n                                return input.id;\n                            }\n                        }).filter(unique).join('-');\n                    } else if (target.type === 'radio') {\n                        targetName = target.name;\n                    } else {\n                        targetName = target.id;\n                    }\n                }\n\n                if (!errorMessage.getAttribute('data-form')) {\n                    errorMessage.setAttribute('data-form', `error-${targetName}`);\n                }\n            });\n        },\n\n        errorSummaries: function (scope = document) {\n            const errorSummaries = tracking.gatherElements('ds_error-summary', scope);\n            errorSummaries.forEach(errorSummary => {\n                const errorSummaryLinks = [].slice.call(errorSummary.querySelectorAll('.ds_error-summary__list a'));\n                errorSummaryLinks.forEach(link => {\n                    if (!link.getAttribute('data-form') && link.href) {\n                        link.setAttribute('data-form', `error-${link.href.substring(link.href.lastIndexOf('#') + 1)}`);\n                    }\n                });\n            });\n        },\n\n        hideThisPage: function (scope = document) {\n            const hideThisPageElements = tracking.gatherElements('ds_hide-page', scope);\n            hideThisPageElements.forEach(hideThisPageElement => {\n                const hideThisPageButtons = [].slice.call(hideThisPageElement.querySelectorAll('.ds_hide-page__button'));\n\n                hideThisPageButtons.forEach(hideThisPageButton => {\n                    // attribute\n                    hideThisPageButton.setAttribute('data-navigation', 'hide-this-page');\n\n                    // event\n                    document.addEventListener('keyup', (event) => {\n                        if (event.key === 'Escape' || event.keyCode === 27) {\n                            window.dataLayer.push({ 'event': 'hide-this-page-keyboard' });\n                        }\n                    });\n                });\n            });\n        },\n\n        insetTexts: function (scope = document) {\n            const insetTexts = tracking.gatherElements('ds_inset-text', scope);\n            insetTexts.forEach(insetText => {\n\n                const links = [].slice.call(insetText.querySelectorAll('.ds_inset-text__text a:not(.ds_button)'));\n                links.forEach(link => {\n                    link.setAttribute('data-navigation', 'inset-link');\n                });\n            });\n        },\n\n        notifications: function (scope = document) {\n            const notificationBanners = tracking.gatherElements('ds_notification', scope);\n            notificationBanners.forEach((banner, index) => {\n                const bannername = banner.id || index+1;\n\n                const links = [].slice.call(banner.querySelectorAll('a:not(.ds_button)'));\n                links.forEach(link => {\n                    if (!link.getAttribute('data-banner')) {\n                        link.setAttribute('data-banner', `banner-${bannername}-link`);\n                    }\n                });\n\n                const buttons = [].slice.call(banner.querySelectorAll('.ds_button:not(.ds_notification__close)'));\n                buttons.forEach(button => {\n                    if (!button.getAttribute('data-banner')) {\n                        button.setAttribute('data-banner', `banner-${bannername}-${slugify(button.innerText)}`);\n                    }\n                });\n\n                const close = banner.querySelector('.ds_notification__close');\n                if (close && !close.getAttribute('data-banner')) {\n                    close.setAttribute('data-banner', `banner-${bannername}-close`);\n                }\n            });\n        },\n\n        pagination: function (scope = document) {\n            const paginations = tracking.gatherElements('ds_pagination', scope);\n            paginations.forEach(pagination => {\n                const loadmore = pagination.querySelector('.ds_pagination__load-more button');\n                if (loadmore && !loadmore.getAttribute('data-search')) {\n                    loadmore.setAttribute('data-search', 'pagination-more');\n                }\n\n                const paginationLinks = [].slice.call(pagination.querySelectorAll('a.ds_pagination__link'));\n                paginationLinks.forEach(link => {\n                    if (!link.getAttribute('data-search')) {\n                        link.setAttribute('data-search', `pagination-${slugify(link.innerText)}`);\n                    }\n                });\n            });\n        },\n\n        phaseBanners: function (scope = document) {\n            const phaseBanners = tracking.gatherElements('ds_phase-banner', scope);\n            phaseBanners.forEach(banner => {\n                const bannername = banner.querySelector('.ds_tag') ? banner.querySelector('.ds_tag').innerText : 'phase';\n\n                const links = [].slice.call(banner.querySelectorAll('a'));\n                links.forEach(link => {\n                    if (!link.getAttribute('data-banner')) {\n                        link.setAttribute('data-banner', `banner-${slugify(bannername)}-link`);\n                    }\n                });\n            });\n        },\n\n        radios: function (scope = document) {\n            const radios = tracking.gatherElements('ds_radio__input', scope);\n            radios.forEach(radio => {\n                if (!radio.getAttribute('data-form') && radio.name && radio.id) {\n                    radio.setAttribute('data-form', `radio-${radio.name}-${radio.id}`);\n                }\n            });\n        },\n\n        searchResults: function (scope = document) {\n            const searchResultsSets = tracking.gatherElements('ds_search-results', scope);\n            searchResultsSets.forEach(searchResults => {\n                const list = searchResults.querySelector('.ds_search-results__list');\n\n                if (!list) {\n                    return;\n                }\n\n                const items = [].slice.call(searchResults.querySelectorAll('.ds_search-result'));\n\n                let start = 1;\n                if (list.getAttribute('start')) {\n                    start = +list.getAttribute('start');\n                }\n\n                items.forEach((item, index) => {\n                    const link = item.querySelector('.ds_search-result__link');\n                    let count;\n                    if (list.getAttribute('data-total')) {\n                        count = list.getAttribute('data-total');\n                    }\n\n                    let attributeValue = `search-result-${start + index}`;\n                    if (count) {\n                        attributeValue += `/${count}`;\n                    }\n                    link.setAttribute('data-search', attributeValue);\n                });\n            });\n        },\n\n        searchSuggestions: function (scope = document) {\n            const searchSuggestionBlocks = tracking.gatherElements('ds_search-suggestions', scope);\n            searchSuggestionBlocks.forEach(searchSuggestionBlock => {\n                const searchSuggestionLinks = [].slice.call(searchSuggestionBlock.querySelectorAll('.ds_search-suggestions a'));\n                searchSuggestionLinks.forEach((link, index) => {\n                    link.setAttribute('data-search', `suggestion-result-${index + 1}/${searchSuggestionLinks.length}`);\n                });\n            });\n        },\n\n        selects: function (scope = document) {\n            const selects = tracking.gatherElements('ds_select', scope);\n            selects.forEach(select => {\n                // data attributes\n                if (!select.getAttribute('data-form') && select.id) {\n                    select.setAttribute('data-form', `select-${select.id}`);\n                }\n\n                const options = [].slice.call(select.querySelectorAll('option'));\n                options.forEach(option => {\n                    let valueSlug = 'null';\n                    if (option.value) {\n                        valueSlug = slugify(option.value);\n                    }\n                    option.setAttribute('data-form', `${select.getAttribute('data-form')}-${valueSlug}`);\n                });\n\n                // events\n                if (!select.classList.contains('js-has-tracking-event')) {\n                    select.addEventListener('change', (e) => {\n                        window.dataLayer.push({ 'event': e.target.querySelector(':checked').dataset.form });\n                    });\n\n                    select.classList.add('js-has-tracking-event');\n                }\n            });\n        },\n\n        sequentialNavs: function (scope = document) {\n            const sequentialNavs = tracking.gatherElements('ds_sequential-nav', scope);\n            sequentialNavs.forEach(sequentialNav => {\n                const prev = sequentialNav.querySelector('.ds_sequential-nav__item--prev > .ds_sequential-nav__button ');\n                const next = sequentialNav.querySelector('.ds_sequential-nav__item--next > .ds_sequential-nav__button ');\n\n                if (prev && !prev.getAttribute('data-navigation')) {\n                    prev.setAttribute('data-navigation', `sequential-previous`);\n                }\n                if (next && !next.getAttribute('data-navigation')) {\n                    next.setAttribute('data-navigation', `sequential-next`);\n                }\n            });\n        },\n\n        sideNavs: function (scope = document) {\n            const sideNavs = tracking.gatherElements('ds_side-navigation', scope);\n            sideNavs.forEach(sideNav => {\n                const list = sideNav.querySelector('.ds_side-navigation__list');\n                const button = sideNav.querySelector('.js-side-navigation-button');\n                const control = sideNav.querySelector('.js-toggle-side-navigation');\n\n                function setNavButton() {\n                    button.setAttribute('data-navigation', `navigation-${control.checked ? 'close' : 'open'}`);\n                }\n\n                function recurse(list, stub = '') {\n                    [].slice.call(list.children).forEach((listItem, index) => {\n                        [].slice.call(listItem.children).forEach(child => {\n                            if (child.classList.contains('ds_side-navigation__list')) {\n                                recurse(child, `${stub}-${index+1}`);\n                            } else {\n                                child.setAttribute('data-navigation', `sidenav${stub}-${index+1}`);\n                            }\n                        });\n                    });\n                }\n\n                // set data attribute on list items\n                recurse(list);\n\n                if (button) {\n                    // set data attribute on open/close toggle\n                    setNavButton();\n\n                    // events\n                    button.addEventListener('click', () => {\n                        setNavButton();\n                    });\n                }\n            });\n        },\n\n        siteBranding: function (scope = document) {\n            const siteBrandings = tracking.gatherElements('ds_site-branding', scope);\n            siteBrandings.forEach(branding => {\n                const logo = branding.querySelector('.ds_site-branding__logo');\n\n                if (logo && !logo.getAttribute('data-header')) {\n                    logo.setAttribute('data-header', 'header-logo');\n                }\n\n                const title = branding.querySelector('.ds_site-branding__title');\n\n                if (title && !title.getAttribute('data-header')) {\n                    title.setAttribute('data-header', 'header-title');\n                }\n            });\n        },\n\n        siteFooter: function (scope = document) {\n            const siteFooters = tracking.gatherElements('ds_site-footer', scope);\n            siteFooters.forEach(footer => {\n                const logo = footer.querySelector('.ds_site-footer__org-link');\n\n                if (!logo.getAttribute('data-footer')) {\n                    logo.setAttribute('data-footer', 'footer-logo');\n                }\n\n                const copyrightLinks = [].slice.call(footer.querySelectorAll('.ds_site-footer__copyright a'));\n                copyrightLinks.forEach(link => {\n                    if (!link.getAttribute('data-footer')) {\n                        link.setAttribute('data-footer', 'footer-copyright');\n                    }\n                });\n\n                const links = [].slice.call(footer.querySelectorAll('.ds_site-items__item a:not(.ds_button)'));\n                links.forEach((link, index) => {\n                    if (!link.getAttribute('data-footer')) {\n                        link.setAttribute('data-footer', `footer-link-${index + 1}`);\n                    }\n                });\n            });\n        },\n\n        siteNavigation: function (scope = document) {\n            const siteNavigations = tracking.gatherElements('ds_site-navigation', scope);\n            siteNavigations.forEach(siteNavigation => {\n                const links = [].slice.call(siteNavigation.querySelectorAll('.ds_site-navigation__link'));\n                links.forEach((link, index) => {\n                    if (!link.getAttribute('data-device')) {\n                        link.setAttribute('data-device', 'desktop');\n                    }\n                    if (!link.getAttribute('data-header')) {\n                        link.setAttribute('data-header', `header-link-${index + 1}`);\n                    }\n                });\n            });\n\n            const mobileNavigations = tracking.gatherElements('ds_mobile-navigation', scope);\n            mobileNavigations.forEach(mobileNavigation => {\n                const toggler = mobileNavigation.querySelector('.ds_mobile-navigation__button');\n                if (toggler) {\n                    toggler.setAttribute('data-header', 'header-menu-toggle');\n                }\n\n                const links = [].slice.call(mobileNavigation.querySelectorAll('.ds_mobile-navigation__link'));\n                links.forEach((link, index) => {\n                    if (!link.getAttribute('data-device')) {\n                        link.setAttribute('data-device', 'mobile');\n                    }\n                    if (!link.getAttribute('data-header')) {\n                        link.setAttribute('data-header', `header-link-${index + 1}`);\n                    }\n                });\n            });\n        },\n\n        tabs: function (scope = document) {\n            const tabSets = tracking.gatherElements('ds_tab-container', scope);\n            tabSets.forEach(tabSet => {\n                const tabs = [].slice.call(tabSet.querySelectorAll('.ds_tab__label'));\n                tabs.forEach((tab, index) => {\n                    if (!tab.getAttribute('data-navigation')) {\n                        tab.setAttribute('data-navigation', `tab-${index + 1}`);\n                    }\n                });\n            });\n        },\n\n        textInputs: function (scope = document) {\n            const textInputs = [].slice.call(scope.querySelectorAll('input.ds_input'));\n            textInputs.forEach(textInput => {\n                if (!textInput.getAttribute('data-form') && textInput.id) {\n                    const type = textInput.type;\n                    textInput.setAttribute('data-form', `${type}input-${textInput.id}`);\n                }\n            });\n        },\n\n        textareas: function (scope = document) {\n            const textareas = [].slice.call(scope.querySelectorAll('textarea.ds_input'));\n            textareas.forEach(textarea => {\n                if (!textarea.getAttribute('data-form') && textarea.id) {\n                    textarea.setAttribute('data-form', `textarea-${textarea.id}`);\n                }\n            });\n        },\n\n        warningTexts: function (scope = document) {\n            const warningTexts = tracking.gatherElements('ds_warning-text', scope);\n            warningTexts.forEach(warningText => {\n\n                const links = [].slice.call(warningText.querySelectorAll('.ds_warning-text a:not(.ds_button)'));\n                links.forEach(link => {\n                    link.setAttribute('data-navigation', 'warning-link');\n                });\n            });\n        }\n    }\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (tracking);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/base/tracking/tracking.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/accordion/accordion.js":
  /*!*************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/accordion/accordion.js ***!
    \*************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass Accordion {\n    constructor(accordion) {\n        this.accordion = accordion;\n        this.items = [].slice.call(accordion.querySelectorAll('.ds_accordion-item'));\n        this.openAllButton = accordion.querySelector('.js-open-all');\n    }\n\n    init() {\n        if (!this.accordion.classList.contains('js-initialised')) {\n            this.items.forEach((item, index) => this.initAccordionItem(item, index));\n            if (this.openAllButton) {\n                this.initOpenAll();\n            }\n            this.accordion.classList.add('js-initialised');\n        }\n    }\n\n    initAccordionItem(item, index) {\n        // transform markup to button-driven version\n        const itemControl = item.querySelector('.ds_accordion-item__control');\n        const itemHeader = item.querySelector('.ds_accordion-item__header');\n        const itemTitle = itemHeader.querySelector('.ds_accordion-item__title');\n        const itemBody = item.querySelector('.ds_accordion-item__body');\n        const idString = parseInt(Math.random() * 1000000, 10);\n\n        const startsOpen = itemControl.checked;\n\n        const itemButton = document.createElement('button');\n        const itemIndicator = document.createElement('span');\n\n        itemButton.classList.add('ds_accordion-item__header-button');\n        itemButton.classList.add('js-accordion-button');\n        itemIndicator.classList.add('ds_accordion-item__indicator');\n\n        // we keep the control present but make it unavailable in the tab order or to screen readers\n        itemControl.classList.remove('visually-hidden');\n        itemControl.classList.add('fully-hidden');\n\n        itemButton.innerHTML = itemTitle.innerHTML;\n        itemButton.appendChild(itemIndicator);\n\n        itemHeader.parentNode.removeChild(itemHeader);\n\n        item.insertBefore(itemButton, itemBody);\n\n        itemBody.id = itemBody.id || `accordion-item-${idString}`;\n        itemButton.setAttribute('aria-controls', itemBody.id);\n\n        if (startsOpen) {\n            item.classList.add('ds_accordion-item--open');\n            itemBody.style.maxHeight = itemBody.scrollHeight + 21 + 28 + 'px';\n            if (this.openAllButton) {\n                this.setOpenAllButton(this.checkAllOpen());\n            }\n        }\n\n        itemButton.setAttribute('aria-expanded', startsOpen);\n        itemButton.setAttribute('aria-controls', itemBody.id);\n\n        // events\n        itemButton.addEventListener('click', event => {\n            event.preventDefault();\n            this.toggleAccordionItem(item);\n        });\n    }\n\n    initOpenAll() {\n        this.openAllButton.addEventListener('click', () => {\n\n            // if we're opening, open all unopened panels\n            // if we're closing, close all opened panels\n            const opening = !this.checkAllOpen();\n            const allPanelButtons = [].slice.call(this.accordion.querySelectorAll('.ds_accordion-item__header-button'));\n\n            let panelsToToggle;\n            if (opening) {\n                panelsToToggle = allPanelButtons.filter(button => !button.parentNode.classList.contains('ds_accordion-item--open'));\n            } else {\n                panelsToToggle = allPanelButtons.filter(button => button.parentNode.classList.contains('ds_accordion-item--open'));\n            }\n\n            panelsToToggle.forEach(button => {\n                this.toggleAccordionItem(button.parentNode);\n            });\n\n            this.setOpenAllButton(opening);\n        });\n    }\n\n    toggleAccordionItem(item) {\n        const itemButton = item.querySelector('.js-accordion-button');\n        const itemControl = item.querySelector('.ds_accordion-item__control');\n        const body = item.querySelector('.ds_accordion-item__body');\n        const isOpen = item.classList.contains('ds_accordion-item--open');\n\n        if (!isOpen) {\n            item.classList.add('ds_accordion-item--open');\n            body.style.display = 'block';\n            // 24px and 32px are the top and bottom padding of the body content\n            body.style.maxHeight = body.scrollHeight + 24 + 32 + 'px';\n\n            window.setTimeout(function () {\n                body.style.removeProperty('max-height');\n            }, 200);\n        } else {\n            body.style.maxHeight = 0;\n            item.classList.remove('ds_accordion-item--open');\n\n            window.setTimeout(function () {\n                body.style.removeProperty('display');\n            }, 200);\n        }\n\n        itemButton.setAttribute('aria-expanded', !isOpen);\n        itemControl.checked = !isOpen;\n\n        if (this.openAllButton) {\n            this.setOpenAllButton(this.checkAllOpen());\n        }\n    }\n\n    setOpenAllButton(open) {\n        if (open) {\n            this.openAllButton.innerHTML = 'Close all <span class=\"visually-hidden\">sections</span>';\n        } else {\n            this.openAllButton.innerHTML = 'Open all <span class=\"visually-hidden\">sections</span>';\n        }\n    }\n\n    checkAllOpen() {\n        const openItemsCount = this.accordion.querySelectorAll('.ds_accordion-item--open').length;\n\n        return (this.items.length === openItemsCount);\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Accordion);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/accordion/accordion.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/back-to-top/back-to-top.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/back-to-top/back-to-top.js ***!
    \*****************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\nclass BackToTop {\n    constructor(el, _window = window, options = {}) {\n        if (options.footerElSelector) {\n            this.footerEl = document.querySelector(options.footerElSelector);\n        } else {\n            this.footerEl = document.querySelector('.ds_site-footer');\n        }\n        this.backToTopElement = el;\n        this.window = _window;\n    }\n\n    init() {\n        if (!this.backToTopElement) {\n            return;\n        }\n        this.checkDisplay();\n\n        this.window.addEventListener('scroll', () => this.checkPosition());\n    }\n\n    checkDisplay() {\n        if (document.body.offsetHeight > this.window.innerHeight) {\n            this.backToTopElement.classList.remove('visually-hidden');\n        } else {\n            this.backToTopElement.classList.add('visually-hidden');\n        }\n    }\n\n    checkPosition() {\n        this.backToTopElement.style.bottom = this.footerEl.offsetHeight + 8 + 'px';\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BackToTop);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/back-to-top/back-to-top.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/cookie-notification/cookie-notification.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/cookie-notification/cookie-notification.js ***!
    \*********************************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _base_tools_storage_storage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../base/_tools/storage/storage */ \"./node_modules/@scottish-government/pattern-library/src/base/_tools/storage/storage.js\");\n\n\n\n\nclass CookieNotification {\n    constructor(el, storage = _base_tools_storage_storage__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n        this.storage = storage;\n\n        this.cookieNoticeElement = el;\n        this.cookieNoticeSuccessElement = document.getElementById('cookie-confirm');\n        this.cookieAcceptAllButton = this.cookieNoticeElement.querySelector('.js-accept-all-cookies');\n        this.cookieAcceptEssentialButton = this.cookieNoticeElement.querySelector('.js-accept-essential-cookies');\n    }\n\n    init() {\n        // check whether we need to display the cookie notice\n        if (!this.storage.get({type: this.storage.types.cookie, name: 'cookie-notification-acknowledged'})) {\n            this.cookieNoticeElement.classList.remove('fully-hidden');\n        }\n\n        // bind a click handler to the accept all button\n        this.cookieAcceptAllButton.addEventListener('click', (event) => {\n            event.preventDefault();\n\n            this.setAllOptionalPermissions(true);\n\n            this.cookieNoticeElement.classList.add('fully-hidden');\n            this.cookieNoticeSuccessElement.classList.remove('fully-hidden');\n        });\n\n        // bind a click handler to the essential only button\n        this.cookieAcceptEssentialButton.addEventListener('click', (event) => {\n            event.preventDefault();\n\n            this.setAllOptionalPermissions(false);\n\n            this.cookieNoticeElement.classList.add('fully-hidden');\n            this.cookieNoticeSuccessElement.classList.remove('fully-hidden');\n        });\n    }\n\n    setAllOptionalPermissions(allow) {\n        const cookiePermissions = JSON.parse(JSON.stringify(this.storage.categories));\n        for (const key in cookiePermissions) {\n            if (key === this.storage.categories.necessary) {\n                // always allow necessary\n                cookiePermissions[key] = true;\n            } else {\n                cookiePermissions[key] = allow;\n            }\n        }\n\n        this.storage.setCookie(\n            this.storage.categories.necessary,\n            'cookiePermissions',\n            JSON.stringify(cookiePermissions),\n            365\n        );\n\n        this.storage.setCookie(\n            this.storage.categories.necessary,\n            'cookie-notification-acknowledged',\n            'yes',\n            365\n        );\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CookieNotification);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/cookie-notification/cookie-notification.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/date-picker/date-picker.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/date-picker/date-picker.js ***!
    \*****************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\nclass DSDatePicker {\n    constructor(el, options = {}) {\n        if (!el) {\n            return;\n        }\n\n        this.datePickerParent = el;\n        this.inputElement = this.datePickerParent.querySelector('input');\n\n        this.dayLabels = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n        this.monthLabels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n\n        this.currentDate = new Date();\n        this.currentDate.setHours(0, 0, 0, 0);\n        this.calendarDays = [];\n        this.imagePath = options.imagePath || 'public/images/icons/';\n\n        this.keycodes = {\n            'tab': 9,\n            'esc': 27,\n            'pageup': 33,\n            'pagedown': 34,\n            'end': 35,\n            'home': 36,\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n\n        if (options.minDate) {\n            this.setMinDate(options.minDate);\n        }\n\n        if (options.maxDate) {\n            this.setMaxDate(options.maxDate);\n        }\n    }\n\n    init() {\n        if (!this.inputElement) {\n            return;\n        }\n\n        // insert calendar button\n        const calendarButtonTempContainer = document.createElement('div');\n        calendarButtonTempContainer.innerHTML = this.buttonTemplate();\n        this.calendarButtonElement = calendarButtonTempContainer.firstChild;\n\n        this.inputElement.parentNode.appendChild(this.calendarButtonElement);\n        this.inputElement.parentNode.classList.add('ds_input__wrapper--has-icon');\n\n        // insert dialog template\n        const dialog = document.createElement('div');\n        dialog.id = 'datepicker-' + parseInt(Math.random() * 1000000, 10);\n        dialog.titleId = 'datepicker-title-' + parseInt(Math.random() * 1000000, 10);\n        dialog.setAttribute('class', 'ds_datepicker__dialog  datepickerDialog');\n        dialog.setAttribute('role', 'dialog');\n        dialog.setAttribute('aria-modal', 'true');\n        dialog.setAttribute('aria-labelledby', dialog.titleId);\n        dialog.innerHTML = this.dialogTemplate(dialog.titleId);\n\n        this.dialogElement = dialog;\n        this.datePickerParent.appendChild(dialog);\n\n        this.dialogTitleNode = this.dialogElement.querySelector('.js-datepicker-month-year');\n\n        this.setMinAndMaxDatesOnCalendar();\n\n        // create calendar\n        const tbody = this.datePickerParent.querySelector('tbody');\n        let dayCount = 0;\n        for (let i = 0; i < 6; i++) {\n            // create row\n            const row = tbody.insertRow(i);\n\n            for (let j = 0; j < 7; j++) {\n                // create cell (day)\n                const cell = document.createElement('td');\n                const dateButton = document.createElement('button');\n                dateButton.dataset.form = 'date-select';\n\n                cell.appendChild(dateButton);\n                row.appendChild(cell);\n\n                const calendarDay = new DSCalendarDay(dateButton, dayCount, i, j, this);\n                calendarDay.init();\n                this.calendarDays.push(calendarDay);\n                dayCount++;\n            }\n        }\n\n        // add event listeners\n        this.prevMonthButton = this.dialogElement.querySelector('.js-datepicker-prev-month');\n        this.prevYearButton = this.dialogElement.querySelector('.js-datepicker-prev-year');\n        this.nextMonthButton = this.dialogElement.querySelector('.js-datepicker-next-month');\n        this.nextYearButton = this.dialogElement.querySelector('.js-datepicker-next-year');\n        this.prevMonthButton.addEventListener('click', (event) => this.focusPreviousMonth(event, false));\n        this.prevYearButton.addEventListener('click', (event) => this.focusPreviousYear(event, false));\n        this.nextMonthButton.addEventListener('click', (event) => this.focusNextMonth(event, false));\n        this.nextYearButton.addEventListener('click', (event) => this.focusNextYear(event, false));\n\n        this.cancelButton = this.dialogElement.querySelector('.js-datepicker-cancel');\n        this.okButton = this.dialogElement.querySelector('.js-datepicker-ok');\n        this.cancelButton.addEventListener('click', (event) => { event.preventDefault(); this.closeDialog(event); });\n        this.okButton.addEventListener('click', () => this.selectDate(this.currentDate));\n\n        const dialogButtons = this.dialogElement.querySelectorAll('button:not([disabled=\"true\"])');\n        this.firstButtonInDialog = dialogButtons[0];\n        this.lastButtonInDialog = dialogButtons[dialogButtons.length - 1];\n        this.firstButtonInDialog.addEventListener('keydown', (event) => this.firstButtonKeyup(event));\n        this.lastButtonInDialog.addEventListener('keydown', (event) => this.lastButtonKeyup(event));\n\n        this.calendarButtonElement.addEventListener('click', (event) => this.toggleDialog(event));\n\n        document.body.addEventListener('mouseup', (event) => this.backgroundClick(event));\n\n        // populates calendar with inital dates, avoids Wave errors about null buttons\n        this.updateCalendar();\n    }\n\n    buttonTemplate() {\n        return `<button class=\"ds_button  ds_button--icon-only  js-calendar-button\">\n            <span class=\"visually-hidden\">Choose date</span>\n            <svg class=\"ds_icon\" aria-hidden=\"true\" role=\"img\"><use xlink:href=\"${this.imagePath}icons.stack.svg#calendar_today\"></use></svg>\n        </button>\n        `;\n    }\n\n    dialogTemplate(titleId) {\n        return `<div class=\"ds_datepicker__dialog__header \">\n        <div class=\"ds_datepicker__dialog__navbuttons\">\n            <button class=\"ds_button  ds_button--icon-only  js-datepicker-prev-year\" aria-label=\"previous year\" data-button=\"button-datepicker-prevyear\">\n                <span class=\"visually-hidden\">Previous year</span>\n                <svg focusable=\"false\" class=\"ds_icon\" aria-hidden=\"true\" role=\"img\"><use xlink:href=\"${this.imagePath}icons.stack.svg#double_chevron_left\"></use></svg>\n            </button>\n\n            <button class=\"ds_button  ds_button--icon-only  js-datepicker-prev-month\" aria-label=\"previous month\" data-button=\"button-datepicker-prevmonth\">\n                <span class=\"visually-hidden\">Previous month</span>\n                <svg focusable=\"false\" class=\"ds_icon\" aria-hidden=\"true\" role=\"img\"><use xlink:href=\"${this.imagePath}icons.stack.svg#chevron_left\"></use></svg>\n            </button>\n        </div>\n\n        <h2 id=\"${titleId}\" class=\"ds_datepicker__dialog__title  js-datepicker-month-year\" aria-live=\"polite\">June 2020</h2>\n\n        <div class=\"ds_datepicker__dialog__navbuttons\">\n            <button class=\"ds_button  ds_button--icon-only  js-datepicker-next-month\" aria-label=\"next month\" data-button=\"button-datepicker-nextmonth\">\n                <span class=\"visually-hidden\">Next month</span>\n                <svg focusable=\"false\" class=\"ds_icon\" aria-hidden=\"true\" role=\"img\"><use xlink:href=\"${this.imagePath}icons.stack.svg#chevron_right\"></use></svg>\n            </button>\n\n            <button class=\"ds_button  ds_button--icon-only  js-datepicker-next-year\" aria-label=\"next year\" data-button=\"button-datepicker-nextyear\">\n                <span class=\"visually-hidden\">Next year</span>\n                <svg focusable=\"false\" class=\"ds_icon\" aria-hidden=\"true\" role=\"img\"><use xlink:href=\"${this.imagePath}icons.stack.svg#double_chevron_right\"></use></svg>\n            </button>\n        </div>\n      </div>\n\n      <table class=\"ds_datepicker__dialog__table  js-datepicker-grid\" role=\"grid\" aria-labelledby=\"${titleId}\">\n      <caption class=\"ds_datepicker__dialog__table-caption\">You can use the cursor keys to select a date</caption>\n      <thead>\n          <tr>\n          <th scope=\"col\" abbr=\"Sunday\">Su</th>\n          <th scope=\"col\" abbr=\"Monday\">Mo</th>\n          <th scope=\"col\" abbr=\"Tuesday\">Tu</th>\n          <th scope=\"col\" abbr=\"Wednesday\">We</th>\n          <th scope=\"col\" abbr=\"Thursday\">Th</th>\n          <th scope=\"col\" abbr=\"Friday\">Fr</th>\n          <th scope=\"col\" abbr=\"Saturday\">Sa</th>\n          </tr>\n      </thead>\n\n      <tbody></tbody>\n      </table>\n\n      <div class=\"ds_datepicker__dialog__buttongroup\">\n      <button class=\"ds_button  ds_button--small  ds_button--cancel  js-datepicker-cancel\" value=\"cancel\" data-button=\"button-datepicker-cancel\">Cancel</button>\n      <button class=\"ds_button  ds_button--small  js-datepicker-ok\" value=\"ok\" data-button=\"button-datepicker-ok\">OK</button>\n      </div>`;\n    }\n\n    leadingZeroes(value, length = 2) {\n        let ret = value.toString();\n\n        while (ret.length < length) {\n            ret = '0' + ret.toString();\n        }\n\n        return ret;\n    }\n\n    setMinDate(date) {\n        this.inputElement.dataset.mindate = this.formattedDateFromDate(date);\n    }\n\n    setMaxDate(date) {\n        this.inputElement.dataset.maxdate = this.formattedDateFromDate(date);\n    }\n\n    setMinAndMaxDatesOnCalendar() {\n        if (this.inputElement.dataset.mindate) {\n            this.minDate = this.formattedDateFromString(this.inputElement.dataset.mindate, null);\n            if (this.minDate && this.currentDate < this.minDate) {\n                this.currentDate = this.minDate;\n            }\n        }\n\n        if (this.inputElement.dataset.maxdate) {\n            this.maxDate = this.formattedDateFromString(this.inputElement.dataset.maxdate, null);\n            if (this.maxDate && this.currentDate > this.maxDate) {\n                this.currentDate = this.maxDate;\n            }\n        }\n    }\n\n    formattedDateFromString(dateString, fallback = new Date()) {\n        let formattedDate = null;\n        const parts = dateString.split('/');\n\n        if (dateString.match(/\\d{1,4}\\/\\d{1,2}\\/\\d{1,4}/)) {\n            switch (this.inputElement.dataset.dateformat) {\n            case 'YMD':\n                formattedDate = new Date(`${parts[1]}/${parts[2]}/${parts[0]}`);\n                break;\n            case 'MDY':\n                formattedDate = new Date(`${parts[0]}/${parts[1]}/${parts[2]}`);\n                break;\n            case 'DMY':\n            default:\n                formattedDate = new Date(`${parts[1]}/${parts[0]}/${parts[2]}`);\n                break;\n            }\n        }\n\n        if (formattedDate instanceof Date && !isNaN(formattedDate)) {\n            return formattedDate;\n        } else {\n            return fallback;\n        }\n    }\n\n    formattedDateFromDate(date) {\n        let formattedDate = null;\n\n        switch (this.inputElement.dataset.dateformat) {\n        case 'YMD':\n            formattedDate = `${date.getFullYear()}/${this.leadingZeroes(date.getMonth() + 1)}/${this.leadingZeroes(date.getDate())}`;\n            break;\n        case 'MDY':\n            formattedDate = `${this.leadingZeroes(date.getMonth() + 1)}/${this.leadingZeroes(date.getDate())}/${date.getFullYear()}`;\n            break;\n        case 'DMY':\n        default:\n            formattedDate = `${this.leadingZeroes(date.getDate())}/${this.leadingZeroes(date.getMonth() + 1)}/${date.getFullYear()}`;\n            break;\n        }\n\n        return formattedDate;\n    }\n\n    backgroundClick(event) {\n        if (this.isOpen() &&\n            !this.dialogElement.contains(event.target) &&\n            !this.inputElement.contains(event.target) &&\n            !this.calendarButtonElement.contains(event.target)) {\n\n            event.preventDefault();\n            this.closeDialog();\n        }\n    }\n\n    formattedDateHuman(date) {\n        return `${this.dayLabels[date.getDay()]} ${date.getDate()} ${this.monthLabels[date.getMonth()]} ${date.getFullYear()}`;\n    }\n\n    firstButtonKeyup(event) {\n        if (event.keyCode === this.keycodes.tab && event.shiftKey) {\n            this.lastButtonInDialog.focus();\n            event.preventDefault();\n        }\n    }\n\n    lastButtonKeyup(event) {\n        if (event.keyCode === this.keycodes.tab && !event.shiftKey) {\n            this.firstButtonInDialog.focus();\n            event.preventDefault();\n        }\n    }\n\n    // render calendar\n    updateCalendar() {\n        this.dialogTitleNode.innerHTML = `${this.monthLabels[this.currentDate.getMonth()]} ${this.currentDate.getFullYear()}`;\n\n        let day = this.currentDate;\n\n        const firstOfMonth = new Date(day.getFullYear(), day.getMonth(), 1);\n        const dayOfWeek = firstOfMonth.getDay();\n\n        firstOfMonth.setDate(firstOfMonth.getDate() - dayOfWeek);\n\n        const thisDay = new Date(firstOfMonth);\n\n        // loop through our days\n        for (let i = 0; i < this.calendarDays.length; i++) {\n            let hidden = thisDay.getMonth() !== day.getMonth();\n\n            let disabled;\n\n            if (thisDay < this.minDate) {\n                disabled = true;\n            }\n            if (thisDay > this.maxDate) {\n                disabled = true;\n            }\n\n            this.calendarDays[i].update(thisDay, hidden, disabled);\n\n            thisDay.setDate(thisDay.getDate() + 1);\n        }\n    }\n\n    setCurrentDate(focus = true) {\n        const currentDate = this.currentDate;\n\n        this.calendarDays.forEach((calendarDay) => {\n            calendarDay.button.setAttribute('tabindex', -1);\n            calendarDay.button.classList.remove('ds_selected');\n            const calendarDayDate = calendarDay.date;\n            calendarDayDate.setHours(0, 0, 0, 0);\n\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n\n            if (calendarDayDate.getTime() === currentDate.getTime() && !calendarDay.disabled) {\n                if (focus) {\n                    calendarDay.button.setAttribute('tabindex', 0);\n                    calendarDay.button.focus();\n                    calendarDay.button.classList.add('ds_selected');\n                }\n            }\n\n            if (this.inputDate && calendarDayDate.getTime() === this.inputDate.getTime()) {\n                calendarDay.button.classList.add('ds_datepicker__current');\n                calendarDay.button.setAttribute('aria-selected', true);\n            } else {\n                calendarDay.button.classList.remove('ds_datepicker__current');\n                calendarDay.button.removeAttribute('aria-selected');\n            }\n\n            if (calendarDayDate.getTime() === today.getTime()) {\n                calendarDay.button.classList.add('ds_datepicker__today');\n            } else {\n                calendarDay.button.classList.remove('ds_datepicker__today');\n            }\n        });\n\n        // if no date is tab-able, make the first non-disabled date tab-able\n        if (!focus) {\n            const enabledDays = this.calendarDays.filter(calendarDay => {\n                return window.getComputedStyle(calendarDay.button).display === 'block' && !calendarDay.button.disabled;\n            });\n\n            enabledDays[0].button.setAttribute('tabindex', 0);\n\n            this.currentDate = enabledDays[0].date;\n        }\n    }\n\n    selectDate(date) {\n        this.calendarButtonElement.querySelector('span').innerText = `Choose date. Selected date is ${this.formattedDateHuman(date)}`;\n        this.inputElement.value = `${this.leadingZeroes(date.getDate())}/${this.leadingZeroes(date.getMonth() + 1)}/${date.getFullYear()}`;\n\n        switch (this.inputElement.dataset.dateformat) {\n        case 'YMD':\n            this.inputElement.value = `${date.getFullYear()}/${this.leadingZeroes(date.getMonth() + 1)}/${this.leadingZeroes(date.getDate())}`;\n            break;\n        case 'MDY':\n            this.inputElement.value = `${this.leadingZeroes(date.getMonth() + 1)}/${this.leadingZeroes(date.getDate())}/${date.getFullYear()}`;\n            break;\n        case 'DMY':\n        default:\n            this.inputElement.value = `${this.leadingZeroes(date.getDate())}/${this.leadingZeroes(date.getMonth() + 1)}/${date.getFullYear()}`;\n            break;\n        }\n\n        const changeEvent = document.createEvent('Event');\n        changeEvent.initEvent('change', true, true);\n        this.inputElement.dispatchEvent(changeEvent);\n\n        this.closeDialog();\n    }\n\n    isOpen() {\n        return this.dialogElement.classList.contains('ds_datepicker__dialog--open');\n    }\n\n    toggleDialog(event) {\n        event.preventDefault();\n        if (this.isOpen()) {\n            this.closeDialog();\n        } else {\n            this.setMinAndMaxDatesOnCalendar();\n            this.openDialog();\n        }\n    }\n\n    openDialog() {\n        // display the dialog\n        this.dialogElement.style.display = 'block';\n        this.dialogElement.classList.add('ds_datepicker__dialog--open');\n\n        // position the dialog\n        this.dialogElement.style.left = `${this.inputElement.offsetWidth + 16}px`;\n\n        // get the date from the input element\n        if (this.inputElement.value.match(/^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/)) {\n            this.inputDate = this.formattedDateFromString(this.inputElement.value);\n            this.currentDate = this.inputDate;\n        }\n\n        this.updateCalendar();\n        this.setCurrentDate();\n    }\n\n    closeDialog() {\n        this.dialogElement.style.display = 'none';\n        this.dialogElement.classList.remove('ds_datepicker__dialog--open');\n        this.calendarButtonElement.focus();\n    }\n\n    goToDate(date, focus) {\n        if (this.minDate && this.minDate > date) {\n            date = this.minDate;\n        }\n\n        if (this.maxDate && this.maxDate < date) {\n            date = this.maxDate;\n        }\n\n        const current = this.currentDate;\n\n        this.currentDate = date;\n\n        if (current.getMonth() !== this.currentDate.getMonth() || current.getFullYear() !== this.currentDate.getFullYear()) {\n            this.updateCalendar();\n        }\n\n        this.setCurrentDate(focus);\n    }\n\n    // day navigation\n    focusNextDay () {\n        const date = new Date(this.currentDate);\n        date.setDate(date.getDate() + 1);\n        this.goToDate(date);\n    }\n\n    focusPreviousDay () {\n        const date = new Date(this.currentDate);\n        date.setDate(date.getDate() - 1);\n        this.goToDate(date);\n    }\n\n    // week navigation\n    focusNextWeek () {\n        const date = new Date(this.currentDate);\n        date.setDate(date.getDate() + 7);\n        this.goToDate(date);\n    }\n\n    focusPreviousWeek () {\n        const date = new Date(this.currentDate);\n        date.setDate(date.getDate() - 7);\n        this.goToDate(date);\n    }\n\n    focusFirstDayOfWeek () {\n        const date = new Date(this.currentDate);\n        date.setDate(date.getDate() - date.getDay());\n        this.goToDate(date);\n    }\n\n    focusLastDayOfWeek () {\n        const date = new Date(this.currentDate);\n        date.setDate(date.getDate() - date.getDay() + 6);\n        this.goToDate(date);\n    }\n\n    // month navigation\n    focusNextMonth(event, focus = true) {\n        event.preventDefault();\n        const date = new Date(this.currentDate);\n        date.setMonth(date.getMonth() + 1);\n        this.goToDate(date, focus);\n    }\n\n    focusPreviousMonth (event, focus = true) {\n        event.preventDefault();\n        const date = new Date(this.currentDate);\n        date.setMonth(date.getMonth() - 1);\n        this.goToDate(date, focus);\n    }\n\n    // year navigation\n    focusNextYear (event, focus = true) {\n        event.preventDefault();\n        const date = new Date(this.currentDate);\n        date.setFullYear(date.getFullYear() + 1);\n        this.goToDate(date, focus);\n    }\n\n    focusPreviousYear (event, focus = true) {\n        event.preventDefault();\n        const date = new Date(this.currentDate);\n        date.setFullYear(date.getFullYear() - 1);\n        this.goToDate(date, focus);\n    }\n}\n\nclass DSCalendarDay {\n    constructor(button, index, row, column, picker) {\n        this.index = index;\n        this.row = row;\n        this.column = column;\n        this.button = button;\n        this.picker = picker;\n\n        this.date = new Date();\n    }\n\n    init() {\n        this.button.addEventListener('keydown', this.keyPress.bind(this));\n        this.button.addEventListener('click', this.click.bind(this));\n    }\n\n    update(day, hidden, disabled) {\n        this.button.innerHTML = day.getDate();\n        this.date = new Date(day);\n\n        if (disabled) {\n            this.button.setAttribute('disabled', true);\n        } else {\n            this.button.removeAttribute('disabled');\n        }\n\n        if (hidden) {\n            this.button.style.display = 'none';\n        } else {\n            this.button.style.display = 'block';\n        }\n    }\n\n    click(event) {\n        this.picker.goToDate(this.date);\n        this.picker.selectDate(this.date);\n\n        event.stopPropagation();\n        event.preventDefault();\n    }\n\n    keyPress(event) {\n        let calendarNavKey = true;\n\n        switch (event.keyCode) {\n        case this.picker.keycodes.left:\n            this.picker.focusPreviousDay();\n            break;\n        case this.picker.keycodes.right:\n            this.picker.focusNextDay();\n            break;\n        case this.picker.keycodes.up:\n            this.picker.focusPreviousWeek();\n            break;\n        case this.picker.keycodes.down:\n            this.picker.focusNextWeek();\n            break;\n        case this.picker.keycodes.home:\n            this.picker.focusFirstDayOfWeek();\n            break;\n        case this.picker.keycodes.end:\n            this.picker.focusLastDayOfWeek();\n            break;\n        case this.picker.keycodes.pageup:\n            event.shiftKey ? this.picker.focusPreviousYear(event) : this.picker.focusPreviousMonth(event);\n            break;\n        case this.picker.keycodes.pagedown:\n            event.shiftKey ? this.picker.focusNextYear(event) : this.picker.focusNextMonth(event);\n            break;\n        case this.picker.keycodes.esc:\n            this.picker.closeDialog();\n            break;\n        default:\n            calendarNavKey = false;\n            break;\n        }\n\n        if (calendarNavKey) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DSDatePicker);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/date-picker/date-picker.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/hide-this-page/hide-this-page.js":
  /*!***********************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/hide-this-page/hide-this-page.js ***!
    \***********************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass HidePage {\n    constructor(_window = window) {\n        this.button = document.querySelector('.js-hide-page');\n        this.window = _window;\n    }\n\n    init() {\n        if (!this.button) {\n            return;\n        }\n        this.attachKeyboardEvents();\n        this.attachMouseEvents();\n\n        this.altlink = this.button.dataset.altlink || 'https://www.google.co.uk';\n    }\n\n    attachKeyboardEvents() {\n        document.addEventListener('keyup', (event) => {\n            if (event.key === 'Escape' || event.keyCode === 27) {\n                this.doHidePage(event);\n            }\n        });\n    }\n\n    attachMouseEvents() {\n        this.button.addEventListener('click', (event) => {\n            this.doHidePage(event);\n        });\n    }\n\n    // clear page body\n    // replace history item\n    // navigate\n    doHidePage(event) {\n        event.preventDefault();\n        document.body.innerHTML = '';\n        document.title = '.';\n        this.window.open(this.button.href, '_newtab');\n        this.window.location.replace(this.altlink);\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (HidePage);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/hide-this-page/hide-this-page.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/notification-banner/notification-banner.js":
  /*!*********************************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/notification-banner/notification-banner.js ***!
    \*********************************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass Notification {\n    constructor (notification) {\n        this.notification = notification;\n        this.notificationClose = notification.querySelector('.js-close-notification');\n    }\n\n    init() {\n        if (this.notificationClose) {\n            this.notificationClose.addEventListener('click', () => {\n                this.notification.parentNode.removeChild(this.notification);\n            });\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Notification);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/notification-banner/notification-banner.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/side-navigation/side-navigation.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/side-navigation/side-navigation.js ***!
    \*************************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass SideNavigation {\n    constructor (sideNavigation) {\n        this.sideNavigation = sideNavigation;\n    }\n\n    init() {\n        if (this.sideNavigation) {\n            this.setupSideNavigation();\n        }\n    }\n\n    setupSideNavigation() {\n        // transform markup to button-driven version\n        const navControl = this.sideNavigation.querySelector('.js-toggle-side-navigation');\n        const navLabel = this.sideNavigation.querySelector('.ds_side-navigation__expand');\n        const idString = parseInt(Math.random() * 1000000, 10);\n        this.navList = this.sideNavigation.querySelector('.ds_side-navigation__list');\n        this.navList.id = this.navList.id || `side-navigation-${idString}`;\n\n        navControl.checked = false;\n\n        const navButton = document.createElement('button');\n        navButton.classList.add('ds_side-navigation__expand');\n        navButton.classList.add('ds_link');\n        navButton.classList.add('js-side-navigation-button');\n        navButton.setAttribute('aria-expanded', false);\n        navButton.innerHTML = navLabel.innerHTML;\n        navButton.setAttribute('aria-expanded', false);\n        navButton.setAttribute('aria-controls', this.navList.id);\n\n        navLabel.parentNode.removeChild(navLabel);\n        this.sideNavigation.insertBefore(navButton, this.navList);\n\n        navButton.setAttribute('aria-controls', this.navList.id);\n\n        // events\n        navButton.addEventListener('click', () => {\n            const isOpen = navControl.checked;\n\n            if (!isOpen) {\n                this.openSideNav();\n            } else {\n                this.closeSideNav();\n            }\n\n            navButton.setAttribute('aria-expanded', !isOpen);\n            navControl.checked = !isOpen;\n        });\n\n        window.addEventListener('scroll', () => {\n            if (navButton.offsetTop >= 1) {\n                navButton.classList.add('ds_side-navigation__expand--shadow');\n            } else {\n                navButton.classList.remove('ds_side-navigation__expand--shadow');\n            }\n        });\n\n        this.sideNavigation.classList.add('js-initialised');\n    }\n\n    openSideNav() {\n        this.navList.style.display = 'block';\n        this.navList.style.maxHeight = this.navList.scrollHeight + 14 +  'px';\n    }\n\n    closeSideNav() {\n        this.navList.style.maxHeight = 0;\n        window.setTimeout(() => {\n            this.navList.style.display = 'none';\n        }, 200);\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SideNavigation);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/side-navigation/side-navigation.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/site-navigation/site-navigation.js":
  /*!*************************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/site-navigation/site-navigation.js ***!
    \*************************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass MobileMenu {\n    constructor (mobileMenu) {\n        this.mobileMenu = mobileMenu;\n        this.menuElement = document.querySelector('#mobile-navigation-menu');\n    }\n\n    init() {\n        if (!this.mobileMenu) {\n            return;\n        }\n\n        const menuToggleButton = document.querySelector('.js-toggle-menu');\n        const menuCloseButton = document.querySelector('.js-close-menu');\n\n        menuToggleButton.addEventListener('click', () => {\n            this.menuElement.classList.toggle('menu-is-open');\n            const menuIsOpen = this.menuElement.classList.contains('menu-is-open');\n\n            if (menuIsOpen) {\n                this.openMenu();\n            } else {\n                this.closeMenu();\n            }\n\n            menuToggleButton.setAttribute('aria-expanded', menuIsOpen);\n            menuCloseButton.setAttribute('aria-expanded', menuIsOpen);\n            menuIsOpen? menuToggleButton.classList.add('ds_mobile-navigation__button--open') : menuToggleButton.classList.remove('ds_mobile-navigation__button--open');\n        });\n\n        menuCloseButton.addEventListener('click', () => {\n            this.menuElement.classList.remove('menu-is-open');\n            this.closeMenu();\n\n            menuToggleButton.setAttribute('aria-expanded', false);\n            menuCloseButton.setAttribute('aria-expanded', false);\n            menuToggleButton.classList.remove('ds_mobile-navigation__button--open');\n        });\n    }\n\n    openMenu () {\n        window.scrollTo(0, window.scrollX);\n        const htmlElement = document.querySelector('html');\n        const bodyElement = document.querySelector('body');\n\n        // position overlay\n        const offsetElement = document.querySelector(this.menuElement.dataset.offsetselector);\n        const offsetHeight = offsetElement ? offsetElement.offsetHeight : 0;\n        const offsetTop = offsetElement ? offsetElement.offsetTop : 0;\n        this.menuElement.style.top = offsetHeight + 'px';\n\n        // handle any need for the menu to scroll if it is longer than the viewport\n        if ((this.menuElement.offsetHeight + offsetHeight) > window.innerHeight) {\n            this.menuElement.style.bottom = offsetHeight - window.innerHeight + 'px';\n        } else {\n            this.menuElement.style.bottom = null;\n        }\n\n        const menuHeight = this.menuElement.offsetHeight;\n        this.menuElement.querySelector('.ds_mobile-navigation__backdrop').style.top = menuHeight + offsetHeight + offsetTop + 'px';\n\n        // set overflow on body and html\n        htmlElement.style.position = 'relative';\n        bodyElement.style.position = 'relative';\n\n        htmlElement.classList.add('menu-is-open');\n        htmlElement.style.height = window.innerHeight + \"px\";\n        bodyElement.style.height = window.innerHeight + \"px\";\n    }\n\n    closeMenu () {\n        const htmlElement = document.querySelector('html');\n        const bodyElement = document.querySelector('body');\n        const mobileNavigation = document.querySelector('.ds_mobile-navigation');\n\n        // unset overflow on body and html\n        htmlElement.style.position = null;\n        bodyElement.style.position = null;\n        htmlElement.classList.remove('menu-is-open');\n        htmlElement.style.height = null;\n        bodyElement.style.height = null;\n\n        mobileNavigation.style.bottom = null;\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MobileMenu);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/site-navigation/site-navigation.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/site-search/site-search.js":
  /*!*****************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/site-search/site-search.js ***!
    \*****************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass CollapsibleSearchBox {\n    constructor (searchBox) {\n        this.searchBox = searchBox;\n    }\n\n    init () {\n        const searchInput = this.searchBox.querySelector('.ds_site-search__input');\n        const searchButton = this.searchBox.querySelector('.js-site-search-button');\n\n        searchButton.addEventListener('click', (event) => {\n            if (!searchInput.value && !window.ds_patterns.breakpoint('medium')) {\n                event.preventDefault();\n\n                this.searchBox.classList.toggle('ds_site-search--expanded');\n                searchInput.focus();\n\n                if (!this.searchBox.classList.contains('ds_site-search--expanded')) {\n                    searchInput.blur();\n                }\n            }\n        });\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CollapsibleSearchBox);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/site-search/site-search.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/table/table.js":
  /*!*****************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/table/table.js ***!
    \*****************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass MobileTables {\n    constructor(_window = window) {\n        this.window = _window;\n    }\n\n    init() {\n        this.scrollingTables = document.querySelectorAll('table[data-smallscreen=\"scrolling\"]');\n        this.boxesTables = document.querySelectorAll('table[data-smallscreen=\"boxes\"]');\n\n        this.checkScrollingTables();\n        this.window.addEventListener('resize', () => { this.checkScrollingTables(); });\n\n        this.setupBoxesTables();\n    }\n\n    checkScrollingTables() {\n        this.scrollingTables.forEach(table => {\n            if (table.querySelector('tbody').offsetWidth > table.parentNode.offsetWidth) {\n                table.classList.add('js-is-scrolling');\n            } else {\n                table.classList.remove('js-is-scrolling');\n            }\n        });\n    }\n\n    setupBoxesTables() {\n        for (let i = 0, il = this.boxesTables.length; i < il; i++) {\n            const trs = this.boxesTables[i].querySelectorAll('tr');\n            let headerRow;\n\n            if ([].slice.call(trs[0].cells).filter(cell => cell.tagName === 'TH').length === trs[0].cells.length) {\n                headerRow = trs[0];\n            }\n\n            if (headerRow) {\n                for (let i = 1, il = trs.length; i < il; i++) {\n                    [].slice.call(trs[i].cells).forEach((td, index) => {\n                        td.setAttribute('data-heading', headerRow.cells[index].innerText);\n                    });\n                }\n            }\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MobileTables);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/table/table.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/components/tabs/tabs.js":
  /*!***************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/components/tabs/tabs.js ***!
    \***************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n/* global document */\n\n\n\nclass Tabs {\n    constructor(tabContainer) {\n        this.tabContainer = tabContainer;\n        this.tabHeaders = [].slice.call(tabContainer.querySelectorAll('.ds_tab__header'));\n\n        this.keycodes = {\n            'left': 37,\n            'up': 38,\n            'right': 39,\n            'down': 40\n        };\n    }\n\n    init() {\n        // dom manipulation\n        this.tabHeaders.forEach((tabHeader, index) => this.initTab(tabHeader, index));\n        this.updateTabIndexes();\n    }\n\n    initTab(tabHeader, index) {\n        const tabLabel = tabHeader.querySelector('.ds_tab__label');\n        const tabContent = tabHeader.nextElementSibling;\n        const tabInput = tabHeader.previousElementSibling;\n\n        const tabID = tabLabel.getAttribute('for') + '-content';\n\n        const button = document.createElement('button');\n        button.setAttribute('class', tabLabel.getAttribute('class'));\n        button.setAttribute('role', tabLabel.getAttribute('role'));\n        if (tabLabel.getAttribute('data-navigation')) {\n            button.setAttribute('data-navigation', tabLabel.getAttribute('data-navigation'));\n        }\n        button.setAttribute('aria-controls', tabLabel.getAttribute('aria-controls'));\n        button.id = tabLabel.id;\n        button.innerHTML = tabLabel.innerHTML + ' ';\n        const span = document.createElement('span');\n        span.classList.add('visually-hidden');\n        span.innerText = `(item ${index + 1} of ${this.tabHeaders.length})`;\n        button.appendChild(span);\n\n        button.dataset.for = tabID;\n        tabContent.id = tabID;\n\n        if (tabInput.checked) {\n            tabHeader.classList.add('ds_current');\n            button.setAttribute('aria-selected', true);\n            tabContent.removeAttribute('hidden');\n        } else {\n            button.setAttribute('aria-selected', false);\n            tabContent.setAttribute('hidden', 'hidden');\n        }\n\n        tabHeader.appendChild(button);\n        tabHeader.removeChild(tabLabel);\n        tabHeader.parentNode.removeChild(tabInput);\n\n        button.addEventListener('click', () => {\n            this.activateTab(tabHeader);\n        });\n\n        button.addEventListener('keydown', (event) => {\n            let tabNavKey = true;\n\n            if (event.keyCode === this.keycodes.right) {\n                this.focusNextTab(event);\n            } else if (event.keyCode === this.keycodes.left) {\n                this.focusPreviousTab(event);\n            } else if (event.keyCode === this.keycodes.up) {\n                this.focusPreviousTab(event);\n            } else if (event.keyCode === this.keycodes.down) {\n                this.focusNextTab(event);\n            } else {\n                tabNavKey = false;\n            }\n\n            if (tabNavKey) {\n                event.preventDefault();\n                event.stopPropagation();\n            }\n        });\n    }\n\n    focusNextTab() {\n        let active = 0;\n        this.tabHeaders.forEach(function (tabHeader, index) {\n            if (document.activeElement === tabHeader.querySelector('button')) {\n                active = index;\n            }\n        });\n        this.tabHeaders[(active + 1) % this.tabHeaders.length].querySelector('button').focus();\n    }\n\n    focusPreviousTab() {\n        let active = 0;\n\n        this.tabHeaders.forEach(function (tabHeader, index) {\n            if (document.activeElement === tabHeader.querySelector('button')) {\n                active = index;\n            }\n        });\n        this.tabHeaders[(active + this.tabHeaders.length - 1) % this.tabHeaders.length].querySelector('button').focus();\n    }\n\n    activateTab(targetTabHeader) {\n        this.tabHeaders.forEach(tabHeader => {\n            const tabContent = tabHeader.nextElementSibling;\n\n            if (tabHeader === targetTabHeader) {\n                tabHeader.classList.add('ds_current');\n                tabHeader.querySelector('.ds_tab__label').setAttribute('aria-selected', true);\n                tabContent.removeAttribute('hidden');\n            } else {\n                tabHeader.classList.remove('ds_current');\n                tabHeader.querySelector('.ds_tab__label').setAttribute('aria-selected', false);\n                tabContent.setAttribute('hidden', 'hidden');\n            }\n        });\n\n        this.updateTabIndexes();\n    }\n\n    updateTabIndexes() {\n        this.tabHeaders.forEach(tabHeader => {\n            let tabIndex = -1;\n\n            if (tabHeader.classList.contains('ds_current')) {\n                tabIndex = 0;\n            }\n\n            if (window.ds_patterns.breakpoint('medium')) {\n                tabHeader.querySelector('.ds_tab__label').setAttribute('tabindex', tabIndex);\n            }\n        });\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Tabs);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/components/tabs/tabs.js?");

  /***/ }),

  /***/ "./node_modules/@scottish-government/pattern-library/src/forms/character-count/character-count.js":
  /*!********************************************************************************************************!*\
    !*** ./node_modules/@scottish-government/pattern-library/src/forms/character-count/character-count.js ***!
    \********************************************************************************************************/
  /*! exports provided: default */
  /***/ (function(module, __webpack_exports__, __webpack_require__) {

  "use strict";
  eval("__webpack_require__.r(__webpack_exports__);\n\n\nclass CharacterCount {\n    constructor(field) {\n        this.field = field;\n        this.inputElement = this.field.querySelector('input, textarea');\n        this.threshold = this.field.dataset.threshold ? this.field.dataset.threshold * 0.01 : 0;\n    }\n\n    init() {\n        if (!this.inputElement) {\n            return;\n        }\n\n        this.setMaxLength();\n\n        if (!this.maxLength) {\n            return;\n        }\n\n        this.emptyMessage = `You can enter up to ${this.maxLength} characters`;\n\n        // dynamically create the message element\n        this.messageElement = document.createElement('div');\n        this.messageElement.setAttribute('aria-live', 'polite');\n        this.messageElement.classList.add('ds_input__message');\n        this.messageElement.classList.add('ds_hint-text');\n        // this.messageElement.innerText = this.inputElement.length ? : this.emptyMessage;\n        if (this.inputElement.value.length < this.maxLength * this.threshold) {\n            this.messageElement.classList.add('fully-hidden');\n        }\n        this.field.appendChild(this.messageElement);\n\n        this.updateCountMessage();\n\n        this.inputElement.addEventListener('keyup', this.checkIfChanged.bind(this));\n    }\n\n    setMaxLength() {\n        if (this.inputElement.getAttribute('maxlength')) {\n            this.maxLength = parseInt(this.inputElement.getAttribute('maxlength'), 10);\n            this.inputElement.removeAttribute('maxlength');\n        } else {\n            this.maxLength = this.field.dataset.maxlength;\n        }\n    }\n\n    /*\n     * Per GDS:\n     * \"Speech recognition software such as Dragon NaturallySpeaking will modify the\n     * fields by directly changing its `value`. These changes don't trigger events\n     * in JavaScript, so we need to poll to handle when and if they occur.\"\n     */\n    checkIfChanged() {\n        if (!this.inputElement.oldValue) {\n            this.inputElement.oldValue = '';\n        }\n\n        if (this.inputElement.value !== this.inputElement.oldValue) {\n            this.inputElement.oldValue = this.inputElement.value;\n            this.updateCountMessage.bind(this)();\n        }\n    }\n\n    updateCountMessage() {\n        const count = this.maxLength - this.inputElement.value.length;\n        let noun = 'characters';\n        if (Math.abs(count) === 1) {\n            noun = 'character';\n        }\n        this.messageElement.innerText = `You have ${count} ${noun} remaining`;\n        if (count < 0) {\n            this.inputElement.classList.add('ds_input--error');\n            this.inputElement.setAttribute('aria-invalid', true);\n            this.messageElement.innerText = `You have ${Math.abs(count)} ${noun} too many`;\n            this.messageElement.classList.add('ds_input__message--error');\n        }\n        else {\n            this.inputElement.classList.remove('ds_input--error');\n            this.inputElement.setAttribute('aria-invalid', false);\n\n            if (this.inputElement.value.length === 0) {\n                this.messageElement.innerText = this.emptyMessage;\n            } else {\n                this.messageElement.innerText = `You have ${count} ${noun} remaining`;\n            }\n\n            this.messageElement.classList.remove('ds_input__message--error');\n        }\n\n        if (this.inputElement.value.length < this.maxLength * this.threshold) {\n            this.messageElement.classList.add('fully-hidden');\n        } else {\n            this.messageElement.classList.remove('fully-hidden');\n        }\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (CharacterCount);\n\n\n//# sourceURL=webpack:///./node_modules/@scottish-government/pattern-library/src/forms/character-count/character-count.js?");

  /***/ }),

  /***/ "./node_modules/webpack/buildin/global.js":
  /*!***********************************!*\
    !*** (webpack)/buildin/global.js ***!
    \***********************************/
  /*! no static exports found */
  /***/ (function(module, exports) {

  eval("var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n//# sourceURL=webpack:///(webpack)/buildin/global.js?");

  /***/ }),

  /***/ 2:
  /*!*****************************************************************!*\
    !*** multi ./assets/scripts/all.js ./assets/scripts/ds-site.js ***!
    \*****************************************************************/
  /*! no static exports found */
  /***/ (function(module, exports, __webpack_require__) {

  eval("__webpack_require__(/*! /mnt/assets/scripts/all.js */\"./assets/scripts/all.js\");\nmodule.exports = __webpack_require__(/*! /mnt/assets/scripts/ds-site.js */\"./assets/scripts/ds-site.js\");\n\n\n//# sourceURL=webpack:///multi_./assets/scripts/all.js_./assets/scripts/ds-site.js?");

  /***/ })

  /******/ });
